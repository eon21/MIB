/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package DBtest;

import java.time.LocalDate;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Pattern;
import oru.inf.InfDB;
import oru.inf.InfException;

/**
 *
 * @author arvid
 */
public class RegistreraAlien extends javax.swing.JFrame {

    /**
     * Creates new form registreraAlien
     */
    private static InfDB idb;
    private String platsensBenamning;
    private String ras;
    //private String regex;

    public RegistreraAlien(InfDB iidb) {
        initComponents();
        idb = iidb;
        fillComboBox();
        firstCmb();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        namnField = new javax.swing.JTextField();
        telField = new javax.swing.JTextField();
        skickaButton = new javax.swing.JButton();
        comboBox = new javax.swing.JComboBox<>();
        losenField = new javax.swing.JPasswordField();
        checkBox = new javax.swing.JCheckBox();
        jLabel6 = new javax.swing.JLabel();
        rasCmb = new javax.swing.JComboBox<>();
        extraRasField = new javax.swing.JTextField();
        extraRasLabel = new javax.swing.JLabel();
        agentCmb = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        jLabel1.setText("Lösenord:");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(39, 39, 52, 16);

        jLabel2.setText("Telefon:");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(39, 121, 41, 16);

        jLabel3.setText("Namn:");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(39, 81, 35, 16);

        jLabel4.setText("Plats:");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(39, 249, 27, 16);

        jLabel5.setText("Ansvarig Agent:");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(39, 162, 84, 16);

        namnField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                namnFieldActionPerformed(evt);
            }
        });
        getContentPane().add(namnField);
        namnField.setBounds(135, 78, 206, 22);

        telField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                telFieldActionPerformed(evt);
            }
        });
        getContentPane().add(telField);
        telField.setBounds(135, 118, 206, 22);

        skickaButton.setText("OK");
        skickaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                skickaButtonActionPerformed(evt);
            }
        });
        getContentPane().add(skickaButton);
        skickaButton.setBounds(209, 282, 49, 25);

        getContentPane().add(comboBox);
        comboBox.setBounds(135, 245, 206, 24);

        losenField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                losenFieldActionPerformed(evt);
            }
        });
        getContentPane().add(losenField);
        losenField.setBounds(135, 36, 206, 22);

        checkBox.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        checkBox.setText("Visa Lösenord");
        checkBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkBoxActionPerformed(evt);
            }
        });
        getContentPane().add(checkBox);
        checkBox.setBounds(359, 35, 107, 25);

        jLabel6.setText("Ras:");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(39, 203, 21, 16);

        rasCmb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Boglodite", "Worm", "Squid" }));
        rasCmb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rasCmbActionPerformed(evt);
            }
        });
        getContentPane().add(rasCmb);
        rasCmb.setBounds(135, 200, 206, 22);
        getContentPane().add(extraRasField);
        extraRasField.setBounds(453, 200, 51, 22);
        getContentPane().add(extraRasLabel);
        extraRasLabel.setBounds(353, 200, 95, 22);

        getContentPane().add(agentCmb);
        agentCmb.setBounds(135, 158, 206, 24);

        jLabel7.setIcon(new javax.swing.ImageIcon("C:\\Users\\arvid\\OneDrive\\Skrivbord\\baby-blue-color-solid-background-1920x1080.png")); // NOI18N
        jLabel7.setText("jLabel7");
        getContentPane().add(jLabel7);
        jLabel7.setBounds(0, 0, 570, 350);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void namnFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_namnFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_namnFieldActionPerformed

    private void telFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_telFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_telFieldActionPerformed
    private void fillComboBox() {
        //fyll comboboxen med platser
        try {
            ArrayList<String> platsLista = new ArrayList<String>();
            String platserFraga = "SELECT Benamning FROM plats";
            platsLista = idb.fetchColumn(platserFraga);
            for (String platsen : platsLista) {
                comboBox.addItem(platsen);

            }
            //fyll agent cmb
            ArrayList<String> agenter = new ArrayList<String>();
            String alienFraga = "SELECT namn FROM agent";
            agenter = idb.fetchColumn(alienFraga);
            for (String agent : agenter) {
                agentCmb.addItem(agent);
            }

        } catch (Exception ex) {
            System.out.println(ex);
        }
    }

    /*public boolean matches(String regex, String input) {
        //System.out.println(input.matches("[a-zA-Z]+"));
        input.matches("[a-zA-Z]+");
        return Pattern.matches(regex, input);
    }*/
    private void skickaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_skickaButtonActionPerformed
        //knapp för att registrera en alien
        try {

            //skapar ett unikt ID för en alien
            String alienIDFraga = "SELECT MAX(Alien_ID) + 1 FROM Alien";
            String alienID_osynlig = idb.fetchSingle(alienIDFraga);

            //Tar ut dagens datum
            LocalDate tid_osynlig = LocalDate.now();

            String losenord_synlig = new String(losenField.getPassword());

            //----------------------------------------
            String namn_synlig = namnField.getText();
            //---------------------------------------

            String ansAgent = agentCmb.getSelectedItem().toString();
            String agentIDfraga = "SELECT agent_ID FROM agent WHERE namn = '" + ansAgent + "'";
            String agentID_synlig = idb.fetchSingle(agentIDfraga);
            //----------------------------------------
            String tel_synlig = telField.getText();
            //---------------------------------------------

            String platsensBenamning = comboBox.getSelectedItem().toString();
            String platsIDfraga = "SELECT plats_ID FROM plats WHERE Benamning = '" + platsensBenamning + "'";
            String platsen = idb.fetchSingle(platsIDfraga);
            //Validerar inputs från valideringsklassen
            Validation validering = new Validation(losenord_synlig);
            boolean test = validering.testaString(losenord_synlig);

            Validation validering2 = new Validation(namn_synlig);
            boolean test2 = validering2.testaString(namn_synlig);

            Validation validering3 = new Validation(ansAgent);
            boolean test3 = validering3.testaString(ansAgent);

            Validation validering4 = new Validation(tel_synlig);
            boolean test4 = validering4.testaString(tel_synlig);

            if (test == true && test2 == true && test3 == true && test4 == true) {
                String insertFraga = "INSERT INTO Alien (Alien_ID, Registreringsdatum, Losenord, Namn, Telefon, Plats, Ansvarig_Agent) VALUES ('" + alienID_osynlig + "', '" + tid_osynlig + "', '" + losenord_synlig + "', '" + namn_synlig + "', '" + tel_synlig + "', '" + platsen + "', '" + agentID_synlig + "' )";
                idb.insert(insertFraga);
            }

            ras = rasCmb.getSelectedItem().toString();
            switch (ras) {
                case "Squid":

                    String antal_armar = extraRasField.getText();

                    Validation validering5 = new Validation(antal_armar);
                    boolean test5 = validering5.kollaInt(antal_armar);
                    if (test5 == true) {
                        String rasFraga = "INSERT INTO Squid (Alien_ID,Antal_Armar) VALUES ('" + alienID_osynlig + "','" + antal_armar + "')";
                        idb.insert(rasFraga);
                    }
                    break;
                case "Boglodite":
                    
                    String antal_boogies = extraRasField.getText();
                    
                    Validation validering6 = new Validation(antal_boogies);
                    boolean test6 = validering6.kollaInt(antal_boogies);
                    if(test6 == true){
                    String rasFraga = "INSERT INTO boglodite(Alien_ID,Antal_Boogies) VALUES ('" + alienID_osynlig + "', '" + antal_boogies + "')";
                    idb.insert(rasFraga);
                    }
                    break;
                case "Worm":
                    String rasFraga = "INSERT INTO worm (Alien_ID) VALUES ('" + alienID_osynlig + "')";
                    idb.insert(rasFraga);
                    break;
                default:
                    break;
            }
        } catch (InfException ex) {
            System.out.println(ex);
        }
    }//GEN-LAST:event_skickaButtonActionPerformed


    private void losenFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_losenFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_losenFieldActionPerformed

    private void checkBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkBoxActionPerformed
//Visar lösenordet om det önskas
        if (checkBox.isSelected()) {
            losenField.setEchoChar((char) 0);
        } else {
            losenField.setEchoChar('*');
        }
    }//GEN-LAST:event_checkBoxActionPerformed
    private void firstCmb() {
        extraRasLabel.setText("Antal Boogies");
        extraRasLabel.setVisible(true);
        extraRasField.setVisible(true);
    }
    private void rasCmbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rasCmbActionPerformed
        // TODO add your handling code here:
        ras = rasCmb.getSelectedItem().toString();

        switch (ras) {
            case "Squid":
                extraRasLabel.setText("Antal Armar");
                extraRasLabel.setVisible(true);
                extraRasField.setVisible(true);
                break;
            case "Boglodite":
                extraRasLabel.setText("Antal Boogies");
                extraRasLabel.setVisible(true);
                extraRasField.setVisible(true);
                break;
            case "Worm":
                extraRasLabel.setVisible(false);
                extraRasField.setVisible(false);
                break;
            default:
                break;
        }


    }//GEN-LAST:event_rasCmbActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RegistreraAlien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RegistreraAlien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RegistreraAlien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RegistreraAlien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        /*RegistreraAlien words = new RegistreraAlien(idb);
        words.matches("[A-Za-zåäö]+", "test");*/

 /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {

                new RegistreraAlien(idb).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> agentCmb;
    private javax.swing.JCheckBox checkBox;
    private javax.swing.JComboBox<String> comboBox;
    private javax.swing.JTextField extraRasField;
    private javax.swing.JLabel extraRasLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPasswordField losenField;
    private javax.swing.JTextField namnField;
    private javax.swing.JComboBox<String> rasCmb;
    private javax.swing.JButton skickaButton;
    private javax.swing.JTextField telField;
    // End of variables declaration//GEN-END:variables
}
